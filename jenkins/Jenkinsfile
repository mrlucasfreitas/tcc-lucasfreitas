pipeline {
  agent any

  options {
    ansiColor('xterm')
  }

  parameters {
    choice(name: 'instances', choices: ['1','2','3','4','5'], description: 'Número de instâncias')
  }

  environment {
    gitUrlProject = "https://github.com/mrlucasfreitas/tcc-lucasfreitas.git"
    gitBranch = "main"

    NUM_INSTANCES = "${params.instances}"
  }

  stages {

    stage("[Git] Clonando projeto") {
      steps {
        git branch: "${gitBranch}", credentialsId: 'GIT_TOKEN', url: "${gitUrlProject}"
      }
    }

    stage("[Terraform] Sincronizando TF State") {
      steps {
        sh """
        cd terraform-aws-ec2-instance/
        aws s3 sync s3://tcc-lucasfreitas/tfstate .
        cd ../
        """
      }
    }

    stage("[Terraform] Criando instâncias"){
      steps {
        sh """
        cd terraform-aws-ec2-instance/
        terraform init -upgrade
        terraform plan -var-file=ec2.tfvars --var num_of_instances="${NUM_INSTANCES}"
        cd ../
        """
      }
    }

    stage("[Terraform] Sincronizando TF State") {
      steps {
        sh """
        aws s3 sync terraform-aws-ec2-instance s3://tcc-lucasfreitas/tfstate --exclude='*' --include='*/terraform.tfstate' --include='*/terraform.tfstate.backup'
        """
      }
    }

    stage("[Shell] Identificando IPs públicos") {
      steps {
        sh """
        echo aa
        """
      }
    }

    stage("[Ansible] Configurando website") {
      steps {
        sh """
        echo bb
        """
      }
    }
  }
}