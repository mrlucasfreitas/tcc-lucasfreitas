pipeline {
  agent any

  options {
    ansiColor('xterm')
  }

  parameters {
    choice(name: 'instances', choices: ['1','2','3','4','5'], description: 'Número de instâncias')
  }

  environment {
    GITURL = "https://github.com/mrlucasfreitas/tcc-lucasfreitas.git"
    GITBRANCH = "main"
    NUM_INSTANCES = "${params.instances}"
    PROFILE = "hmg"
    JENKINS_DIR = "/var/lib/jenkins"
    SSH_PATH = "${JENKINS_DIR}/.ssh"
    SSH_KEY = "tcc_id_rsa"
  }

  stages {

    stage("[Git] Clonando projeto") {
      steps {
        git branch: "${GITBRANCH}", credentialsId: 'GIT_TOKEN', url: "${GITURL}"
      }
    }

    stage("[Terraform] Sincronizando TF State") {
      steps {
        sh """
        export AWS_PROFILE=${PROFILE}
        cd terraform-aws-ec2-instance/
        aws s3 sync s3://tcc-lucasfreitas/tfstate .
        cd ../
        """
      }
    }

    stage("[Terraform] Criando instâncias"){
      steps {
        sh """
        export AWS_PROFILE=${PROFILE}
        cd terraform-aws-ec2-instance/
        terraform init -upgrade
        terraform apply -auto-approve -var-file=ec2.tfvars --var num_of_instances="${NUM_INSTANCES}"
        cd ../
        """
      }
    }

    stage("[Terraform] Resincronizando TF State") {
      steps {
        sh """
        export AWS_PROFILE=${PROFILE}
        aws s3 sync terraform-aws-ec2-instance s3://tcc-lucasfreitas/tfstate --exclude='*' --include='terraform.tfstate' --include='terraform.tfstate.backup'
        """
      }
    }

    stage("[Shell] Identificando IPs públicos") {
      steps {
        sh """
        ./ansible-stack/scripts/generate_hosts_ini.sh
        """
      }
    }

    stage("[Ansible] Configurando website") {
      agent {
        docker {
          image 'mrlucasfreitas/ansible:2.9.11' 
          args "-u root -v ${JENKINS_DIR}/workspace/${JOB_NAME}:/home -v ${SSH_PATH}/${SSH_KEY}:/root/.ssh/${SSH_KEY}"
          reuseNode false
        }
      }
      steps {
        sh """
        cd /home/ansible-stack/
        ansible-playbook plays/nginx.yml -i environments/aws/hosts.ini -l webserver --private-key=~/.ssh/${SSH_KEY}
        """
      }
    }

    stage("[Teste] Acessando paginas WEB") {
      steps {
        sh """
        ./ansible-stack/scripts/test-sites.sh
        """
      }
    }
  }
}